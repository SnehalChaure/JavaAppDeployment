- hosts : all
  become: true
  vars:
    service_file_path: myapp.service.j2
    service_dest_path: "/etc/systemd/system/myapp.service"
    jar_dest_path: "/opt/myapp/{{date_time}}/helloworld-1.0-SNAPSHOT.jar"
    jar_src_path: "../jardir/helloworld-1.0-SNAPSHOT.jar"
  tasks:
  - set_fact:
     date_time: "{{ansible_date_time.date}}-{{ansible_date_time.hour}}-{{ansible_date_time.minute}}"

  - name: Creates directory
    file:
     path: "{{item}}"
     state: directory
    loop:
     - "/opt/myapp/{{date_time}}"

  - name: read current.txt
    shell: "cat /opt/myapp/current.txt"
    register: current_version
    ignore_errors: true

  - name: get the checksum of local jar
    stat:
       path: "{{ jar_src_path }}"
       checksum_algorithm: sha1
    delegate_to: localhost
    register: local_jar

  - name: get the checksum of deployed jar
    stat:
      path: "{{ current_version.stdout }}"
      checksum_algorithm: sha1
    register: remote_jar

  - name: copy jar file
    copy:
     src: "{{ jar_src_path }}"
     dest: "{{ jar_dest_path }}"
    when:
     - current_version.rc != 0 or local_jar.stat.checksum != remote_jar.stat.checksum
    register: copy_jar

  - name: print debug info
    debug:
       msg: "Same Jar Already Deployed On The Server :=>{{ current_version.stdout}} "
    when: copy_jar.changed == false

  - name: store the jar file path in current.txt
    copy:
      dest: /opt/myapp/current.txt
      content: "{{ jar_dest_path }}"
    when: copy_jar.changed

  - name: create/update service file on host machine
    template:
      src: "{{service_file_path}}"
      dest: "{{ service_dest_path }}"
    when: copy_jar.changed

  - name: start a javapp service
    systemd:
      name: myapp
      state: restarted
      daemon_reload: true
    when: copy_jar.changed

